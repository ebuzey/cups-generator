{"ast":null,"code":"/* global BigInt */import React,{useState,useEffect}from'react';import Button from'./Button';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function Cups(){const[cups,setCups]=useState('');const[copied,setCopied]=useState(false);// Movemos la definición de las funciones aquí para evitar la dependencia en useEffect\nconst alphabet=\"TRWAGMYFPDXBNJZSQVHLCKE\";const generarParteNumerica=()=>{const distribuidora=\"1234\";const numeroSuministro=Math.floor(Math.random()*1e12).toString().padStart(12,'0');return distribuidora+numeroSuministro;};const calcularCaracteresControl=parteNumerica=>{const numeroEntero=BigInt(parteNumerica);const R0=numeroEntero%529n;const C=R0/23n;const R=R0%23n;return alphabet[Number(C)]+alphabet[Number(R)];};const generarCups=()=>{const parteNumerica=generarParteNumerica();const caracteresControl=calcularCaracteresControl(parteNumerica);const cupsFormateado=\"ES\".concat(parteNumerica).concat(caracteresControl);setCups(cupsFormateado);};useEffect(()=>{// Generar un CUPS inicial al cargar la página\ngenerarCups();},[]);const handleCopyToClipboard=()=>{navigator.clipboard.writeText(cups);setCopied(true);};const handleGenerarCups=()=>{generarCups();// Llama a generarCups para generar un nuevo CUPS\nsetCopied(false);// Restablece el estado de copied al generar un nuevo CUPS\n};return/*#__PURE__*/_jsx(\"div\",{className:\"App\",children:/*#__PURE__*/_jsxs(\"header\",{className:\"App-header\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:cups,readOnly:true,style:{width:'400px',height:'60px',padding:'8px',marginRight:'8px',fontSize:'20px'}}),/*#__PURE__*/_jsx(\"button\",{onClick:handleCopyToClipboard,style:{backgroundColor:'white',color:'black',padding:'8px',border:'1px solid black',cursor:'pointer',width:'100px',height:'60px',fontSize:'20px'},children:\"Copiar\"}),copied&&/*#__PURE__*/_jsx(\"p\",{style:{color:'white'},children:\"\\xA1CUPS copiado al portapapeles!\"})]}),/*#__PURE__*/_jsx(Button,{onClick:handleGenerarCups,text:\"Generar CUPS\"})]})});}export default Cups;","map":{"version":3,"names":["React","useState","useEffect","Button","jsx","_jsx","jsxs","_jsxs","Cups","cups","setCups","copied","setCopied","alphabet","generarParteNumerica","distribuidora","numeroSuministro","Math","floor","random","toString","padStart","calcularCaracteresControl","parteNumerica","numeroEntero","BigInt","R0","C","R","Number","generarCups","caracteresControl","cupsFormateado","concat","handleCopyToClipboard","navigator","clipboard","writeText","handleGenerarCups","className","children","type","value","readOnly","style","width","height","padding","marginRight","fontSize","onClick","backgroundColor","color","border","cursor","text"],"sources":["/home/emanuel/Project/Personal/cups-generator/src/components/cups-generator.js"],"sourcesContent":["/* global BigInt */\nimport React, { useState, useEffect } from 'react';\nimport Button from './Button';\n\nfunction Cups() {\n  const [cups, setCups] = useState('');\n  const [copied, setCopied] = useState(false);\n\n  // Movemos la definición de las funciones aquí para evitar la dependencia en useEffect\n  const alphabet = \"TRWAGMYFPDXBNJZSQVHLCKE\";\n\n  const generarParteNumerica = () => {\n    const distribuidora = \"1234\";\n    const numeroSuministro = Math.floor(Math.random() * 1e12).toString().padStart(12, '0');\n    return distribuidora + numeroSuministro;\n  };\n\n  const calcularCaracteresControl = (parteNumerica) => {\n    const numeroEntero = BigInt(parteNumerica);\n    const R0 = numeroEntero % 529n;\n    const C = R0 / 23n;\n    const R = R0 % 23n;\n    return alphabet[Number(C)] + alphabet[Number(R)];\n  };\n\n  const generarCups = () => {\n    const parteNumerica = generarParteNumerica();\n    const caracteresControl = calcularCaracteresControl(parteNumerica);\n    const cupsFormateado = `ES${parteNumerica}${caracteresControl}`;\n    setCups(cupsFormateado);\n  };\n\n  useEffect(() => {\n    // Generar un CUPS inicial al cargar la página\n    generarCups();\n  }, []);\n\n  const handleCopyToClipboard = () => {\n    navigator.clipboard.writeText(cups);\n    setCopied(true);\n  };\n\n  const handleGenerarCups = () => {\n    generarCups(); // Llama a generarCups para generar un nuevo CUPS\n    setCopied(false); // Restablece el estado de copied al generar un nuevo CUPS\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <div>\n          <input type=\"text\" value={cups} readOnly style={{ width: '400px', height: '60px', padding: '8px', marginRight: '8px', fontSize: '20px' }} />\n          <button onClick={handleCopyToClipboard} style={{ backgroundColor: 'white', color: 'black', padding: '8px', border: '1px solid black', cursor: 'pointer', width: '100px', height: '60px', fontSize: '20px' }}>Copiar</button>\n          {copied && <p style={{ color: 'white' }}>¡CUPS copiado al portapapeles!</p>}\n        </div>\n        <Button onClick={handleGenerarCups} text=\"Generar CUPS\" />\n      </header>\n    </div>\n  );\n}\n\nexport default Cups;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}