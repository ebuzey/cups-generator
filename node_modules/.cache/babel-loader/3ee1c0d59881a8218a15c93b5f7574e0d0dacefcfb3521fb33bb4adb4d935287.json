{"ast":null,"code":"var _jsxFileName = \"/home/emanuel/Project/Personal/cups-generator/src/components/cups-generator.js\",\n  _s = $RefreshSig$();\n/* global BigInt */\nimport React, { useState, useEffect, useCallback } from 'react';\nimport Button from './Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Cups() {\n  _s();\n  const [cups, setCups] = useState('');\n  const [copied, setCopied] = useState(false);\n  const generarCups = useCallback((distribuidora = \"0000\", pais = \"ES\", ntOpcional = false) => {\n    const generarParteNumerica = distribuidora => {\n      const numeroSuministro = Math.floor(Math.random() * 1e12).toString().padStart(12, '0');\n      return distribuidora + numeroSuministro;\n    };\n    const calcularCaracteresControl = numero => {\n      const tablaEquivalencia = \"TRWAGMYFPDXBNJZSQVHLCKE\";\n      const numeroEntero = BigInt(numero);\n      const R0 = numeroEntero % 529n; // Usar 'n' al final para indicar un BigInt\n      const C = Number(R0 / 23n); // Convertir a Number para usar como índice\n      const R = Number(R0 % 23n); // Convertir a Number para usar como índice\n      return tablaEquivalencia[C] + tablaEquivalencia[R];\n    };\n    const parteNumerica = generarParteNumerica(distribuidora);\n    const caracteresControl = calcularCaracteresControl(parteNumerica);\n    let cupsFormateado = `${pais} ${distribuidora} ${parteNumerica.substring(0, 4)} ${parteNumerica.substring(4, 8)} ${parteNumerica.substring(8, 12)} ${caracteresControl}`;\n    if (ntOpcional) {\n      const n = Math.floor(Math.random() * 10);\n      const opcionesT = ['F', 'P', 'R', 'C', 'X', 'Y', 'Z'];\n      const t = opcionesT[Math.floor(Math.random() * opcionesT.length)];\n      cupsFormateado += ` ${n} ${t}`;\n    }\n    return cupsFormateado;\n  }, []);\n  useEffect(() => {\n    const nuevoCups = generarCups(\"1234\", \"ES\", true);\n    setCups(nuevoCups);\n  }, [generarCups]);\n  const handleGenerarCups = () => {\n    const nuevoCups = generarCups(\"1234\", \"ES\", true);\n    setCups(nuevoCups);\n    setCopied(false);\n  };\n  const handleCopyToClipboard = () => {\n    navigator.clipboard.writeText(cups);\n    setCopied(true);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: cups,\n          readOnly: true,\n          style: {\n            width: '400px',\n            height: '60px',\n            padding: '8px',\n            marginRight: '8px',\n            fontSize: '20px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleCopyToClipboard,\n          style: {\n            backgroundColor: 'white',\n            color: 'black',\n            padding: '8px',\n            border: '1px solid black',\n            cursor: 'pointer',\n            width: '100px',\n            height: '60px',\n            fontSize: '20px'\n          },\n          children: \"Copiar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), copied && /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            color: 'white'\n          },\n          children: \"\\xA1CUPS copiado al portapapeles!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 22\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleGenerarCups,\n        text: \"Generar CUPS\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n_s(Cups, \"Lq9p6bqQDBcf/pMj8VabstTL1f8=\");\n_c = Cups;\nexport default Cups;\nvar _c;\n$RefreshReg$(_c, \"Cups\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","Button","jsxDEV","_jsxDEV","Cups","_s","cups","setCups","copied","setCopied","generarCups","distribuidora","pais","ntOpcional","generarParteNumerica","numeroSuministro","Math","floor","random","toString","padStart","calcularCaracteresControl","numero","tablaEquivalencia","numeroEntero","BigInt","R0","C","Number","R","parteNumerica","caracteresControl","cupsFormateado","substring","n","opcionesT","t","length","nuevoCups","handleGenerarCups","handleCopyToClipboard","navigator","clipboard","writeText","className","children","type","value","readOnly","style","width","height","padding","marginRight","fontSize","fileName","_jsxFileName","lineNumber","columnNumber","onClick","backgroundColor","color","border","cursor","text","_c","$RefreshReg$"],"sources":["/home/emanuel/Project/Personal/cups-generator/src/components/cups-generator.js"],"sourcesContent":["/* global BigInt */\nimport React, { useState, useEffect, useCallback } from 'react';\nimport Button from './Button';\n\nfunction Cups() {\n  const [cups, setCups] = useState('');\n  const [copied, setCopied] = useState(false);\n\n  const generarCups = useCallback((distribuidora = \"0000\", pais = \"ES\", ntOpcional = false) => {\n    const generarParteNumerica = (distribuidora) => {\n      const numeroSuministro = Math.floor(Math.random() * 1e12).toString().padStart(12, '0');\n      return distribuidora + numeroSuministro;\n    };\n\n    const calcularCaracteresControl = (numero) => {\n      const tablaEquivalencia = \"TRWAGMYFPDXBNJZSQVHLCKE\";\n      const numeroEntero = BigInt(numero);\n      const R0 = numeroEntero % 529n; // Usar 'n' al final para indicar un BigInt\n      const C = Number(R0 / 23n); // Convertir a Number para usar como índice\n      const R = Number(R0 % 23n); // Convertir a Number para usar como índice\n      return tablaEquivalencia[C] + tablaEquivalencia[R];\n    };\n    \n\n    const parteNumerica = generarParteNumerica(distribuidora);\n    const caracteresControl = calcularCaracteresControl(parteNumerica);\n    let cupsFormateado = `${pais} ${distribuidora} ${parteNumerica.substring(0, 4)} ${parteNumerica.substring(4, 8)} ${parteNumerica.substring(8, 12)} ${caracteresControl}`;\n    if (ntOpcional) {\n      const n = Math.floor(Math.random() * 10);\n      const opcionesT = ['F', 'P', 'R', 'C', 'X', 'Y', 'Z'];\n      const t = opcionesT[Math.floor(Math.random() * opcionesT.length)];\n      cupsFormateado += ` ${n} ${t}`;\n    }\n    return cupsFormateado;\n  }, []);\n\n  useEffect(() => {\n    const nuevoCups = generarCups(\"1234\", \"ES\", true);\n    setCups(nuevoCups);\n  }, [generarCups]);\n\n  const handleGenerarCups = () => {\n    const nuevoCups = generarCups(\"1234\", \"ES\", true);\n    setCups(nuevoCups);\n    setCopied(false);\n  };\n\n  const handleCopyToClipboard = () => {\n    navigator.clipboard.writeText(cups);\n    setCopied(true);\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <div>\n          <input type=\"text\" value={cups} readOnly style={{ width: '400px', height: '60px', padding: '8px', marginRight: '8px', fontSize: '20px' }} />\n          <button onClick={handleCopyToClipboard} style={{ backgroundColor: 'white', color: 'black', padding: '8px', border: '1px solid black', cursor: 'pointer', width: '100px', height: '60px', fontSize: '20px' }}>Copiar</button>\n          {copied && <p style={{ color: 'white' }}>¡CUPS copiado al portapapeles!</p>}\n        </div>\n        <Button onClick={handleGenerarCups} text=\"Generar CUPS\" />\n      </header>\n    </div>\n  );\n}\n\nexport default Cups;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}